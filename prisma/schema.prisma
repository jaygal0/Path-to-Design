generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Designers {
  id              String      @id @default(cuid()) 
  isPublished     Boolean?    @default(false)
  firstName       String?
  lastName        String?
  slug            String?      @unique
  email           String?
  url             String?
  instagram       String?
  dribble         String?
  oneLiner        String?
  roles           Roles?      @relation(fields: [rolesId], references: [id])
  rolesId         String?
  salaries        Salaries?   @relation(fields: [salariesId], references: [id])
  salariesId      String?
  countries       Countries?  @relation(fields: [countriesId], references: [id])
  countriesId     String?
  companies       Companies?  @relation(fields: [companiesId], references: [id])
  companiesId     String?
  apps            Apps[] 
  books           Books[]
  answers         Answers[]   // One-to-many with Answers
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt

  @@index([slug])
}

model Questions {
  id          String       @id @default(cuid())
  question    String
  Answers     Answers[]
  answerId    String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

}

model Answers {
  id          String       @id @default(cuid())
  designer    Designers?   @relation(fields: [designerId], references: [id])
  designerId  String?
  questions   Questions? @relation(fields: [questionsid], references: [id])
  questionsid String?
  answer      String[]     // Array of paragraphs
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Apps {
  id          String      @id @default(cuid())
  app         String?
  desc        String?
  url         String?
  designers   Designers[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Books {
  id          String      @id @default(cuid())
  book        String?
  author      String?
  url         String?
  bookCover   String?
  designers   Designers[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Roles {
  id        String      @id @default(cuid())
  role      String?
  designers Designers[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model Countries {
  id        String      @id @default(cuid())
  country   String?
  designers Designers[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model Salaries {
  id        String      @id @default(cuid())
  salary    Int?
  designers Designers[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model Companies {
  id            String       @id @default(cuid())
  company       String?
  desc          String?
  url           String?
  designers     Designers[]
  CompanySize   CompanySize? @relation(fields: [companySizeId], references: [id])
  companySizeId String?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model CompanySize {
  id        String      @id @default(cuid())
  size      String?
  companies Companies[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}